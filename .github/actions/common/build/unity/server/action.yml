name: Build Unity Server
description: Unity Server를 빌드하는 작업

inputs:
  unity_license:
    required: true
    description: Unity License 내용
  unity_email:
    required: true
    description: Unity 계정
  unity_password:
    required: true
    description: Unity 계정의 패스워드
  unity_version:
    required: true
    description: 빌드할 프로젝트의 Unity 버전
  project_path:
    required: true
    description: 빌드할 working directory
  execute_method:
    required: true
    description: 실행할 빌드 method
  artifact_name:
    required: true
    description: 실행 파일명
  publish_dir:
    required: false
    default: publish
    description: output 경로

runs:
  using: "composite"
  steps:
    - name: Inject License
      env:
        UNITY_LICENSE: ${{ inputs.unity_license }}
      run: |
        $dir = 'C:\ProgramData\Unity'
        # New-Item -ItemType Directory -Path $dir -Force | Out-Null

        # UTF-8 (No BOM)로 정확히 쓰기, 추가 개행 없음
        $utf8NoBom = New-Object System.Text.UTF8Encoding($false)
        [System.IO.File]::WriteAllText("$dir\Unity_lic.ulf", $env:UNITY_LICENSE, $utf8NoBom)
      shell: powershell
      # run: |
      #   mkdir -p C:/ProgramData\Unity
      #   printf '%s' "${{ inputs.unity_license }}" > C:/ProgramData/Unity/Unity_lic.ulf
      # shell: bash
      

    - name: Build Unity Server Project
      env:
        #BUILD_OUTPUT: ${{ inputs.publish_dir }}\${{ inputs.artifact_name }}
        BUILD_OUTPUT: C:/actions-runner/_work/AnimalRunning/AnimalRunning/publish/AnimalRunningServer.x86_64
      run: |
        $unity = 'C:\Program Files\Unity\Hub\Editor\${{ inputs.unity_version }}\Editor\Unity.exe'
        & $unity `
          -quit -batchmode -nographics `
          -username "${{ inputs.unity_email }}" -password "${{ inputs.unity_password }}" `
          -executeMethod "${{ inputs.execute_method }}" -buildOutput "$env:BUILD_OUTPUT" `
          -projectPath "${{ inputs.project_path }}"
      shell: powershell
      # run: |
      #   "C:/Program Files/Unity/Hub/Editor/${{ inputs.unity_version }}/Editor/Unity.exe" \
      #     -quit -batchmode -nographics \
      #     -username "${{ inputs.unity_email }}" -password "${{ inputs.unity_password }}" \
      #     -executeMethod "${{ inputs.execute_method }}" -buildOutput "${BUILD_OUTPUT}" \
      #     -projectPath "${{ inputs.project_path }}"
      # shell: bash