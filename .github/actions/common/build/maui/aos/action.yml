name: Build Maui AOS Platform
description: MAUI AOS Platform 빌드하는 작업

inputs:
  work_dir:
    required: true
    description: 빌드할 working directory
  project_name:
    required: true
    description: 빌드할 프로젝트명
  target_framework:
    required: true
    description: 타겟 프레임워크
  artifact_name:
    required: true
    description: apk명
  android_keystore_base64:
    required: true
    description: android keystore base64
  android_key_alias:
    required: true
    description: android keystore alias
  android_key_password:
    required: true
    description: android keystore alias password
  android_keystore_password:
    required: true
    description: android keystore password
  publish_dir:
    required: false
    default: publish
    description: output 경로
  build_configuration:
    required: false
    default: Release
    description: Build Configuration

runs:
  using: "composite"
  steps:
  
    # 0) Install MAUI workload
    - name: Install .NET MAUI Android workload
      shell: bash
      run: |
        dotnet workload install maui-android

    - name: Decode keystore
      shell: bash
      run: |
        echo "${{ inputs.android_keystore_base64 }}" | base64 -d > "${{ github.workspace }}/keystore.keystore"
   
    # 1) Publish – APK only
    - name: Publish MAUI APK
      shell: bash
      run: |
        dotnet publish "${{ inputs.work_dir }}/${{ inputs.project_name }}/${{ inputs.project_name }}.csproj" \
          -c "${{ inputs.build_configuration }}" \
          -f "${{ inputs.target_framework }}" \
          -p:AndroidPackageFormats=apk \
          -p:RuntimeIdentifier=android-arm64 \
          -p:CI_VARIABLE=true \
          -p:AndroidKeyStore=true \
          -p:AndroidSigningKeyStore="${{ github.workspace }}/keystore.keystore" \
          -p:AndroidSigningKeyAlias="${{ inputs.android_key_alias }}" \
          -p:AndroidSigningKeyPass="${{ inputs.android_key_password }}" \
          -p:AndroidSigningStorePass="${{ inputs.android_keystore_password }}" \
          -o "${{ inputs.publish_dir }}"

    # 2) Find verify APK signature And Rename
    - name: Find verify APK signature And Rename
      shell: bash
      run: |
        SDK=${ANDROID_SDK_ROOT:-$ANDROID_HOME}
        BUILD_TOOLS=$(ls "$SDK/build-tools" | sort -V | tail -1)
        APKSIGNER="$SDK/build-tools/$BUILD_TOOLS/apksigner"
        
        for apk in "${{ inputs.publish_dir }}"/*.apk; do
            if $APKSIGNER verify "$apk" 2>/dev/null; then
                echo "✅ 서명된 APK 발견: $apk"
                mv "$apk" "${{ inputs.publish_dir }}/${{ inputs.artifact_name }}"
                echo "📦 APK ready: ${publish_dir}/${{ inputs.artifact_name }}"
            else
                echo "❌ 미서명 APK: $apk"
            fi
        done
